const Vehicles={player:{color:[14376561]},npc:{type:["car"]}};let GAME_={status:!1,score:0,activeHonk:!1,lastTimestamp:0,angleMoved:0,scoreAngle:0,initialPos:1.5*Math.PI,speed:.001,carAcelerate:!1,carDecelerate:!1,trafficLight:!0,trafficPenalty:!1,trafficLightPosition:{x:0,y:0,z:0},playerCar:!1,npcCar:[],playerHorn:new Audio("./source/playerHorn.mp3"),truckHorn:[],carHorn:[]},scene,camera,renderer,trafficLightsRe,activeHonkRe;for(let i=1;i<=1;i++)GAME_.carHorn.push(new Audio(`./source/carHorn/carHorn${i}.mp3`));for(let i=1;i<=1;i++)GAME_.truckHorn.push(new Audio(`./source/truckHorn/truckHorn${i}.mp3`));function playCarHorn(){return GAME_.carHorn[Math.floor(Math.random()*GAME_.carHorn.length)].play(),!0}function playTruckHorn(){return GAME_.truckHorn[Math.floor(Math.random()*GAME_.truckHorn.length)].play(),!0}window.addEventListener("load",()=>{function Car(type="npc"){function CarWheel(){return new THREE.Mesh(new THREE.BoxBufferGeometry(12,33,12),new THREE.MeshLambertMaterial({color:3355443}))}function CarFrontTexture(){const canvas=document.createElement("canvas");canvas.height=32,canvas.width=64;const context=canvas.getContext("2d");return context.fillStyle="#ffffff",context.fillRect(0,0,canvas.width,canvas.height),context.fillStyle="#568194",context.fillRect(8,8,48,24),new THREE.CanvasTexture(canvas)}function CarSideTexture(){const canvas=document.createElement("canvas");canvas.height=32,canvas.width=128;const context=canvas.getContext("2d");return context.fillStyle="#ffffff",context.fillRect(0,0,canvas.width,canvas.height),context.fillStyle="#568194",context.fillRect(58,8,60,24),new THREE.CanvasTexture(canvas)}const car=new THREE.Group;let frontTexture=CarFrontTexture();frontTexture.center=new THREE.Vector2(.5,.5),frontTexture.rotation=Math.PI/2;let backTexture=CarFrontTexture();backTexture.center=new THREE.Vector2(.5,.5),backTexture.rotation=-Math.PI/2;let rightSideTexture=CarSideTexture(),leftSideTexture=CarSideTexture();leftSideTexture.flipY=!1;const group=[CarWheel(),CarWheel(),new THREE.Mesh(new THREE.BoxBufferGeometry(60,30,15),new THREE.MeshLambertMaterial({color:"player"==type?"#db5e71":randomColor()})),new THREE.Mesh(new THREE.BoxBufferGeometry(33,24,12),[new THREE.MeshLambertMaterial({map:frontTexture}),new THREE.MeshLambertMaterial({color:backTexture}),new THREE.MeshLambertMaterial({map:leftSideTexture}),new THREE.MeshLambertMaterial({map:rightSideTexture}),new THREE.MeshLambertMaterial({color:16777215}),new THREE.MeshLambertMaterial({color:16777215})])];return group[0].position.z=6,group[0].position.x=-18,group[1].position.z=6,group[1].position.x=18,group[2].position.z=12,group[3].position.z=25,group[3].position.x=-6,group.forEach(el=>{car.add(el)}),car}function Truck(){}function Map(width,height){function mapGradient(w,h){const canvas=document.createElement("canvas");canvas.height=h,canvas.width=w;let context=canvas.getContext("2d");return context.fillStyle="#546e90",context.fillRect(0,0,w,h),context.lineWidth=2,context.strokeStyle="#ffffff",context.setLineDash([10,16]),context.beginPath(),context.arc(w/2-arcCenterX,h/2,trackRadius,angleJoin+Math.PI/180*25,2*Math.PI+(angleJoin-Math.PI/180*2)),context.stroke(),context.beginPath(),context.arc(w/2+arcCenterX,h/2,trackRadius,0,2*Math.PI),context.stroke(),context.setLineDash([]),context.beginPath(),context.arc(w/2-arcCenterX,h/2,trackRadius,angleJoin+Math.PI/180*10,angleJoin+Math.PI/180*20),context.stroke(),context.save(),context.fillStyle="#ffffff",context.font="26px Arial",context.textAlign="center",context.translate(w/2-arcCenterX,h/2),context.rotate(angleJoin+Math.PI/180*7),context.fillText("STOP",trackRadius,0),context.lineWidth=6,context.beginPath(),context.moveTo(innerTrackRadius,10),context.lineTo(outerTrackRadius,10),context.stroke(),context.restore(),new THREE.CanvasTexture(canvas)}function middleIsland(){const island=new THREE.Shape;return island.absarc(-arcCenterX,0,innerTrackRadius,centerAngle.inner,-centerAngle.inner,!0),island.absarc(arcCenterX,0,innerTrackRadius,Math.PI+centerAngle.inner,Math.PI-centerAngle.inner,!0),island}function sideIsland(type){const island=new THREE.Shape;return island.absarc("left"==type?-arcCenterX:arcCenterX,0,innerTrackRadius,"left"==type?angleJoin:Math.PI+angleJoin,"left"==type?-angleJoin:Math.PI-angleJoin,!1),island.absarc("left"==type?arcCenterX:-arcCenterX,0,outerTrackRadius,"left"==type?Math.PI+arcAngle:arcAngle,"left"==type?Math.PI-arcAngle:-arcAngle,!0),island}function outerIsland(w,h){const field=new THREE.Shape;return field.moveTo(-w/2,-h/2),field.lineTo(0,-h/2),field.absarc(-arcCenterX,0,outerTrackRadius,-centerAngle.outer,centerAngle.outer,!0),field.absarc(arcCenterX,0,outerTrackRadius,Math.PI-centerAngle.outer,Math.PI+centerAngle.outer,!0),field.lineTo(0,-h/2),field.lineTo(w/2,-h/2),field.lineTo(w/2,h/2),field.lineTo(-w/2,h/2),field}const linearGradientPlaneColor=mapGradient(width,height),plane=new THREE.Mesh(new THREE.PlaneBufferGeometry(width,height),new THREE.MeshLambertMaterial({map:linearGradientPlaneColor}));scene.add(plane);const leftIslandT=sideIsland("left"),rightIslandT=sideIsland("right"),middleIslandT=middleIsland(),outerIslandT=outerIsland(width,height),field=new THREE.Mesh(new THREE.ExtrudeBufferGeometry([leftIslandT,middleIslandT,rightIslandT,outerIslandT],{depth:10,bevelEnabled:!1}),[new THREE.MeshLambertMaterial({color:6153073}),new THREE.MeshLambertMaterial({color:3567678})]);scene.add(field)}function movePlayerCar(timeDelta){const playerSpeed=getPlayerSpeed();GAME_.angleMoved+=playerSpeed*timeDelta,GAME_.scoreAngle+=playerSpeed*timeDelta;const totalAngleMoved=GAME_.initialPos+GAME_.angleMoved;playerCarPosition(totalAngleMoved)}function moveOtherCar(timeDelta){GAME_.npcCar.forEach(el=>{el.clockwise?el.angle-=GAME_.speed*el.speed*timeDelta:el.angle+=GAME_.speed*el.speed*timeDelta,otherCarPosition(el)})}function playerCarPosition(angle){const playerX=Math.cos(angle)*trackRadius-arcCenterX,playerY=Math.sin(angle)*trackRadius;GAME_.playerCar.position.x=playerX,GAME_.playerCar.position.y=playerY,GAME_.playerCar.rotation.z=angle+Math.PI/2}function otherCarPosition(el){const realTrack=el.clockwise?trackRadius-trackSemiWidth/2:trackRadius+trackSemiWidth/2,vehicleX=Math.cos(el.angle)*realTrack+arcCenterX,vehicleY=Math.sin(el.angle)*realTrack;el.mesh.position.x=vehicleX,el.mesh.position.y=vehicleY,el.mesh.rotation.z=el.angle+(el.clockwise?-Math.PI/2:Math.PI/2)}function collisionDetectionOtherCar(){GAME_.npcCar.forEach((el,i)=>{const alpha=el.mesh.position;GAME_.npcCar.forEach(pr=>{if(el!=pr&&pr.clockwise==el.clockwise){const beta=pr.mesh.position,distance=getHitDistance(beta,alpha);GAME_.npcCar[i].speed=distance>0&&distance<=150?distance<=100?0:.5:0==distance?3:getOtherSpeed(el.type)+(GAME_.activeHonk?Math.random():0)}})})}function getPlayerSpeed(){return GAME_.carAcelerate?2*GAME_.speed:GAME_.carDecelerate?.5*GAME_.speed:GAME_.speed}function getOtherSpeed(type){switch(type){case"car":return 1*Math.random()+1;case"truck":return.9*Math.random()+.6}}function writeScore(t){scoreDom.innerHTML=Math.floor(parseInt(t))}function randomColor(){return`#${(16777216+16777215*Math.random()).toString(16).substr(1,6)}`}function acelerateNpc(){clearTimeout(activeHonkRe),GAME_.activeHonk=!0,activeHonkRe=setTimeout(()=>{GAME_.activeHonk=!1},1e3)}function addNpcCar(){var type=Vehicles.npc.type[Math.floor(Math.random()*Vehicles.npc.type.length)];const mesh="car"==type?Car():void 0;scene.add(mesh);const clockwise=Math.random()<=.5,speed=getOtherSpeed(type),angle=clockwise?0:2*Math.PI;GAME_.npcCar.push({type:type,mesh:mesh,clockwise:clockwise,speed:speed,angle:angle})}function getHitPosition(center,angle,clockwise,distance){const directionalAngle=angle+(clockwise?-Math.PI/2:+Math.PI/2);return{x:center.x+Math.cos(directionalAngle)*distance,y:center.y+Math.sin(directionalAngle)*distance}}function getHitDistance(alpha,beta){return Math.sqrt((beta.x-alpha.x)**2+(beta.y-alpha.y)**2)}function hitDetection(){const playerHitZone1=getHitPosition(GAME_.playerCar.position,GAME_.initialPos+GAME_.angleMoved,!1,15),playerHitZone2=getHitPosition(GAME_.playerCar.position,GAME_.initialPos+GAME_.angleMoved,!1,-15),hit=GAME_.npcCar.some(el=>{switch(el.type){case"car":const npcHitZone1=getHitPosition(el.mesh.position,el.angle,el.clockwise,15),npcHitZone2=getHitPosition(el.mesh.position,el.angle,el.clockwise,-15);if((getHitDistance(npcHitZone1,playerHitZone1)<80||getHitDistance(npcHitZone1,playerHitZone2)<80)&&playCarHorn(),getHitDistance(playerHitZone1,npcHitZone1)<40||getHitDistance(playerHitZone1,npcHitZone2)<40||getHitDistance(npcHitZone1,playerHitZone1)<40||getHitDistance(npcHitZone1,playerHitZone2)<40)return!0}});hit&&end()}function trafficLightsDetection(){crossTrafficLights()&&!GAME_.trafficPenalty&&(GAME_.trafficLight||(GAME_.trafficPenalty=!0,GAME_.score-1>0?(GAME_.score-=1,GAME_.scoreAngle-=2*Math.PI,penaltyDom.classList.add("active"),setTimeout(()=>{penaltyDom.classList.remove("active")},1100)):(GAME_.score=0,GAME_.scoreAngle=0),writeScore(GAME_.score)))}function crossTrafficLights(){return getHitDistance(GAME_.playerCar.position,GAME_.trafficLightPosition)<40}function setTrafficLights(){let randomBolean=!GAME_.trafficLight;GAME_.trafficLight=randomBolean,randomBolean?(trafficDom.classList.remove("red"),trafficDom.classList.add("green")):(trafficDom.classList.remove("green"),trafficDom.classList.add("red"))}function animation(time){if(!GAME_.lastTimestamp)return void(GAME_.lastTimestamp=time);const timeDelta=time-GAME_.lastTimestamp;movePlayerCar(timeDelta);const slaps=Math.floor((GAME_.scoreAngle-Math.PI/2)/(2*Math.PI));slaps>GAME_.score&&(writeScore(slaps),GAME_.score=slaps,GAME_.trafficPenalty=!1),GAME_.npcCar.length<(slaps+1)/5&&GAME_.npcCar.length<4&&addNpcCar(),collisionDetectionOtherCar(),moveOtherCar(timeDelta),trafficLightsDetection(),GAME_.lastTimestamp=time,hitDetection(),renderer.render(scene,camera)}function reset(){renderer.setAnimationLoop(null),GAME_.status=!1,GAME_.score=0,GAME_.round=0,GAME_.angleMoved=0,GAME_.lastTimestamp=0,GAME_.scoreAngle=0,GAME_.npcCar.forEach(el=>{scene.remove(el.mesh)}),GAME_.npcCar=[],playerCarPosition(GAME_.initialPos),renderer.render(scene,camera),clearInterval(trafficLightsRe)}function start(){GAME_.status||(writeScore(0),GAME_.status=!0,renderer.setAnimationLoop(animation),trafficLightsRe=setInterval(setTrafficLights,5e3),scoreDom.classList.add("active"),resultAreaDom.classList.add("disable"))}function end(){reset(),scoreDom.classList.remove("active"),resultAreaDom.classList.remove("disable")}window.addEventListener("keydown",e=>{console.log(e.key),GAME_.status&&(38==e.keyCode&&(e.preventDefault(),GAME_.carAcelerate=!0),40==e.keyCode&&(e.preventDefault(),GAME_.carDecelerate=!0),"R"!=e.key&&"r"!=e.key||(e.preventDefault(),console.log("aaa"),end()),"H"!=e.key&&"h"!=e.key||(e.preventDefault(),GAME_.playerHorn.play(),acelerateNpc()))}),window.addEventListener("keyup",e=>{GAME_.status&&(38==e.keyCode&&(e.preventDefault(),GAME_.carAcelerate=!1),40==e.keyCode&&(e.preventDefault(),GAME_.carDecelerate=!1))}),document.querySelector(".claxon-btn .push--flat").addEventListener("click",()=>{GAME_.playerHorn.play(),acelerateNpc()});const brakeDom=document.querySelector(".joystick .brake");brakeDom.addEventListener("touchstart",e=>{e.preventDefault(),GAME_.carDecelerate=!0,brakeDom.classList.add("active")}),brakeDom.addEventListener("touchend",e=>{e.preventDefault(),GAME_.carDecelerate=!1,brakeDom.classList.remove("active")});const upDom=document.querySelector(".joystick .up");upDom.addEventListener("touchstart",e=>{e.preventDefault(),GAME_.carAcelerate=!0,upDom.classList.add("active")}),upDom.addEventListener("touchend",e=>{e.preventDefault(),GAME_.carAcelerate=!1,upDom.classList.remove("active")});const resultAreaDom=document.querySelector(".result-area");window.addEventListener("keypress",e=>{32==e.keyCode&&start()}),resultAreaDom.addEventListener("touchend",start),scene=new THREE.Scene;const ambientLight=new THREE.AmbientLight(16777215,.6);scene.add(ambientLight);const directionalLight=new THREE.DirectionalLight(16777215,.6);directionalLight.position.set(100,-300,400),scene.add(directionalLight);let aspectRatio,cameraWidth=1500,cameraHeight=1500/(window.innerWidth/window.innerHeight);camera=new THREE.OrthographicCamera(-750,750,cameraHeight/2,cameraHeight/-2,0,1e3),camera.position.set(0,-280,400),camera.up.set(0,0,1),camera.lookAt(0,0,0);const trackRadius=225,trackSemiWidth=45,innerTrackRadius=trackRadius-trackSemiWidth,outerTrackRadius=trackRadius+trackSemiWidth,angleJoin=1/3*Math.PI,deltaY=Math.sin(angleJoin)*innerTrackRadius,arcAngle=Math.asin(deltaY/outerTrackRadius),arcCenterX=(Math.cos(angleJoin)*innerTrackRadius+Math.cos(arcAngle)*outerTrackRadius)/2,centerAngle={inner:Math.acos(arcCenterX/innerTrackRadius),outer:Math.acos(arcCenterX/outerTrackRadius)},scoreDom=document.querySelector(".best-score"),penaltyDom=document.querySelector(".penalty"),trafficDom=document.querySelector(".traffic");Map(1500,2*cameraHeight+window.innerHeight),GAME_.playerCar=Car("player"),scene.add(GAME_.playerCar),renderer=new THREE.WebGLRenderer({antialias:!0}),renderer.setSize(window.innerWidth,window.innerHeight),GAME_.trafficLightPosition.x=Math.cos(2*Math.PI-angleJoin)*trackRadius-arcCenterX,GAME_.trafficLightPosition.y=Math.sin(2*Math.PI-angleJoin)*trackRadius,reset(),document.body.appendChild(renderer.domElement),window.addEventListener("orientationchange",(function(){0!=window.orientation&&180!=window.orientation&&window.location.reload()}),!1)});